syntax = "proto3";

package message;

service VarifyService {
  rpc GetVarifyCode (GetVarifyReq) returns (GetVarifyRsp) {}
}

message GetVarifyReq {
  string email = 1;
}

message GetVarifyRsp {
  int32 error = 1;
  string email = 2;
  string code = 3;
}


message GetChatServerReq {
  int32 uid = 1;
}

message GetChatServerRsp {
  int32 error = 1;
  string host = 2;
  string port = 3;
  string token = 4;
}

message LoginReq{
	int32 uid = 1;
	string token = 2;
}

message LoginRsp{
	int32 error = 1;
	int32 uid = 2;
	string token = 3;
}

service StatusService {
	rpc GetChatServer (GetChatServerReq) returns (GetChatServerRsp) {}
	rpc Login(LoginReq) returns (LoginRsp){}
}

message AddFriendReq{
	int32 uid = 1;
	string name = 2;
	string desc = 3;
	int32 touid = 4;	
}

message AddFriendRsp{
	int32 error = 1;
	int32 uid = 2;
	int32 touid = 3;
}

message ReplyAddFriendReq{
	int32 uid = 1;
	bool agree = 2; // true: agree, false: refuse
	int32 touid = 3;
}

message ReplyAddFriendRsp{
	int32 error = 1;
	int32 uid = 2;
	int32 touid = 3;
}

// 发送的文本消息（单条）
message SendChatMessageReq{
	int32 uid = 1;
	int32 touid = 2;
	string message = 3;
}

message SendChatMessageRsp{
	int32 error = 1;
	int32 uid = 2;
	int32 touid = 3;
}

// 好友验证
message AuthFriendReq{
	int32 uid = 1;
	int32 touid = 2;
}

message AuthFriendRsp{
	int32 error = 1;
	int32 uid = 2;
	int32 touid = 3;
}

// 单条文本消息，有多个类别
message TextChatData{
	int32 msgid = 1; // 消息唯一标识，用于标识该消息是否已经被接收
	string data = 2;
}

// 批量发送消息
message TextChatMessageReq{
	int32 uid = 1;
	int32 touid = 2;
	repeated TextChatData message = 3; // 发送文本消息的数组
}

message TextChatMessageRsp{
	int32 error = 1;
	int32 uid = 2;
	int32 touid = 3;
}

// 聊天服务端接口
service ChatService{
	rpc sendChatMessage(SendChatMessageReq) returns (SendChatMessageRsp){}
	rpc notifyAddFriend(AddFriendReq) returns (AddFriendRsp){}
	rpc notifyReplyAddFriend(ReplyAddFriendReq) returns (ReplyAddFriendRsp){}
	rpc notifyAuthFriend(AuthFriendReq) returns (AuthFriendRsp){}
	rpc notifyTextChatMessage(TextChatMessageReq) returns (TextChatMessageRsp){}

}